name: Github Actions in Windows

on: push

jobs:
  build-windows:
    runs-on: windows-latest

    strategy:
      max-parallel: 5

    steps:
    - name: Set up miniconda environment pyprecag_up with python 3.12
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: '3.12'
        activate-environment: pyprecag_up
    - run: |
        conda install geopandas rasterio -c conda_forge -y
        conda install fiona six chardet unidecode scipy pint -c conda_forge -y
        conda install libsqlite sqlite -c conda_forge -y
        conda install gdal -c conda_forge -y
        conda install flake8 -c conda-forge -y
        pip install .
    - name: Lint with flake8
      run: |
        # Activate the base environment        
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        # Activate the base environment
        mv ./pyprecag/tests/test_processing.py ./pyprecag/tests/X_test_processing.py
        mv ./pyprecag/tests/test_vector_ops.py ./pyprecag/tests/X_test_vector_ops.py
        mv ./pyprecag/tests/test_end2end.py ./pyprecag/tests/X_test_end2end.py
        python -m unittest discover -s pyprecag/tests -p "test_*.py" -v
        #python -m unittest discover -s pyprecag/tests -p "test_v*.py" -v
